// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UrqlClient Client with exchanges provided should instantiate a client with exchanges 1`] = `
Client {
  "activeOperations": Object {},
  "createOperationContext": [Function],
  "createRequestOperation": [Function],
  "dispatchOperation": [Function],
  "executeMutation": [Function],
  "executeQuery": [Function],
  "executeSubscription": [Function],
  "fetch": undefined,
  "fetchOptions": undefined,
  "maskTypename": false,
  "operations$": [Function],
  "preferGetMethod": false,
  "queue": Array [],
  "reexecuteOperation": [Function],
  "requestPolicy": "cache-first",
  "results$": [Function],
  "suspense": false,
  "url": "https://localhost:3000",
}
`;

exports[`UrqlClient Client with fetchOptions provided should instantiate a client instance with fetchOptions provided as FetchFn 1`] = `
Client {
  "activeOperations": Object {},
  "createOperationContext": [Function],
  "createRequestOperation": [Function],
  "dispatchOperation": [Function],
  "executeMutation": [Function],
  "executeQuery": [Function],
  "executeSubscription": [Function],
  "fetch": undefined,
  "fetchOptions": [Function],
  "maskTypename": false,
  "operations$": [Function],
  "preferGetMethod": false,
  "queue": Array [],
  "reexecuteOperation": [Function],
  "requestPolicy": "cache-first",
  "results$": [Function],
  "suspense": false,
  "url": "https://localhost:3000",
}
`;

exports[`UrqlClient Client with fetchOptions provided should instantiate a client instance with fetchOptions provided as FetchOpts 1`] = `
Client {
  "activeOperations": Object {},
  "createOperationContext": [Function],
  "createRequestOperation": [Function],
  "dispatchOperation": [Function],
  "executeMutation": [Function],
  "executeQuery": [Function],
  "executeSubscription": [Function],
  "fetch": undefined,
  "fetchOptions": Object {
    "headers": Object {
      "Content-Type": "application/json",
    },
    "integrity": "",
    "method": "POST",
    "referrerPolicy": "",
  },
  "maskTypename": false,
  "operations$": [Function],
  "preferGetMethod": false,
  "queue": Array [],
  "reexecuteOperation": [Function],
  "requestPolicy": "cache-first",
  "results$": [Function],
  "suspense": false,
  "url": "https://localhost:3000",
}
`;

exports[`UrqlClient Client with only a url provided should instantiate a client instance 1`] = `
Client {
  "activeOperations": Object {},
  "createOperationContext": [Function],
  "createRequestOperation": [Function],
  "dispatchOperation": [Function],
  "executeMutation": [Function],
  "executeQuery": [Function],
  "executeSubscription": [Function],
  "fetch": undefined,
  "fetchOptions": undefined,
  "maskTypename": false,
  "operations$": [Function],
  "preferGetMethod": false,
  "queue": Array [],
  "reexecuteOperation": [Function],
  "requestPolicy": "cache-first",
  "results$": [Function],
  "suspense": false,
  "url": "https://localhost:3000",
}
`;

exports[`UrqlClient Client with suspense flag should accept a suspense flag to enable experimental SSR mode 1`] = `
Client {
  "activeOperations": Object {},
  "createOperationContext": [Function],
  "createRequestOperation": [Function],
  "dispatchOperation": [Function],
  "executeMutation": [Function],
  "executeQuery": [Function],
  "executeSubscription": [Function],
  "fetch": undefined,
  "fetchOptions": undefined,
  "maskTypename": false,
  "operations$": [Function],
  "preferGetMethod": false,
  "queue": Array [],
  "reexecuteOperation": [Function],
  "requestPolicy": "cache-first",
  "results$": [Function],
  "suspense": true,
  "url": "https://localhost:3000",
}
`;

exports[`UrqlClient ssrExchange should exist and be callable 1`] = `[Function]`;

exports[`UrqlClient with custom fetch implementation should accept a custom fetch implementation 1`] = `
Client {
  "activeOperations": Object {},
  "createOperationContext": [Function],
  "createRequestOperation": [Function],
  "dispatchOperation": [Function],
  "executeMutation": [Function],
  "executeQuery": [Function],
  "executeSubscription": [Function],
  "fetch": [Function],
  "fetchOptions": undefined,
  "maskTypename": false,
  "operations$": [Function],
  "preferGetMethod": false,
  "queue": Array [],
  "reexecuteOperation": [Function],
  "requestPolicy": "cache-first",
  "results$": [Function],
  "suspense": false,
  "url": "http://localhost:3000",
}
`;

exports[`UrqlClient with custom fetch implementation should work with a fetcher using Fetch.request 1`] = `
Client {
  "activeOperations": Object {},
  "createOperationContext": [Function],
  "createRequestOperation": [Function],
  "dispatchOperation": [Function],
  "executeMutation": [Function],
  "executeQuery": [Function],
  "executeSubscription": [Function],
  "fetch": [Function],
  "fetchOptions": undefined,
  "maskTypename": false,
  "operations$": [Function],
  "preferGetMethod": false,
  "queue": Array [],
  "reexecuteOperation": [Function],
  "requestPolicy": "cache-first",
  "results$": [Function],
  "suspense": false,
  "url": "http://localhost:3000",
}
`;
